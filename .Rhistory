need_packages <- c("stringr", "splines", "foreign", "survival", "lmtest", "shiny", "shinyBS")
new_packages <- need_packages[!(need_packages %in% installed.packages()[, "Package"])]
if (length(new.packages) > 0) install.packages(new_packages)
shiny::runGitHub("shiny-nonlinear", "NErler")
devtools::install_github("sdhutchins/docthis")
styler:::style_active_file()
styler:::style_active_file()
devtools::install_github("ropenscilabs/available")
library("available")
available('experimenteR')
available('experimentR')
available('labmanageR')
available('experimenteR')
source("https://bioconductor.org/biocLite.R")
biocLite(c("biomaRt", "edgeR", "preprocessCore", "topGO", "Rgraphviz", "shiny", "DT", "data.table", "hash"))
install.packages('LONGO')
install.packages('longo')
install.packages('ggpubr')
install.packages("available")
install.packages('ggradar')
library(devtools)
devtools::install_github("ricardo-bion/ggradar",
dependencies=TRUE)
remove.packages('yaml')
install.packages('yaml')
setwd("C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz")
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/barplots.R')
expression_data
expression_df <- data.frame(expression_data)
expression_df
expression_df$nfkb.control
expression_df <- na.omit(data.frame(expression_data))
expression_df
expression_df <- data.frame(expression_data)
na.omit(expression_df)
library(tidyr)
install.packages('tidyr')
%>% drop_na()%>% drop_na()
library(tidyr)
expression_data %>% drop_na()
expression_data <- read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=",")
expression_data %>% drop_na()
expression_data
expression_data <- read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=",")
expression_data
expression_data <- read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=",")
expression_data
expression_data %>% drop_na()
expression_data <- read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=",")
expression_data <- na.omit(read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=","))
expression_data
expression_data <- read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=",")
ggbarplot(expression_data, "nfkb.control", "nfkb.expression",
fill = "nfkb.control", color = "nfkb.control",
palette = c("#00AFBB", "#E7B800", "#FC4E07"))
library(ggpubr)
ggbarplot(expression_data, "nfkb.control", "nfkb.expression",
fill = "nfkb.control", color = "nfkb.control",
palette = c("#00AFBB", "#E7B800", "#FC4E07"))
ggbarplot(expression_data, "nfkb.control", "nfkb.expression",
fill = "nfkb.control", color = "nfkb.control",
palette = c("#00AFBB", "#E7B800"))
counts <- table(mtcars$gear)
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
counts
mtcars
counts
counts <- table(mtcars$vs, mtcars$gear)
counts
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts <- table(mtcars$gear)
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
counts
counts <- table(mtcars$vs, mtcars$gear)
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
counts
barplot(expression_data, main="Car Distribution",
xlab="Number of Gears")
counts <- table(expression_data$nfkb.expression, expression_data$nfkb.expression)
counts
counts <- table(expression_data$nfkb.expressio)
counts <- table(expression_data$nfkb.expression)
counts
mtcars
library(ggplot2)
# Basic barplot
p<-ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity")
p
library(ggplot2)
p <-ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity")
df
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
df
df
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/barplots.R')
counts <- table(expression_data$nfkb.expressio)
expression_data
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/barplots.R')
expression_data
expression_data <- as.data.frame(read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=","))
expression_data
expression_data <- as.data.frame(read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=","))
expression_data
library(ggplot2)
# Basic barplot
p<-ggplot(data=expression_data, aes(x=Variable, y=rlu)) +
geom_bar(stat="identity")
p
expression_data <- as.data.frame(read.csv(file="data/293_lentiviral.csv", header=TRUE, sep=","))
ggbarplot(expression_data, "variable", "rlu",
fill = "variable", color = "variable", add="mean_se")
expression_data$variable
library(ggradar)
suppressPackageStartupMessages(library(dplyr))
library(scales)
library(tibble)
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/radar.R')
rhc77
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/radar.R')
rhc77
mtcars %>%
rownames_to_column( var = "group" ) %>%
mutate_at(vars(-group),funs(rescale)) %>%
tail(4) %>% select(1:10) -> mtcars_radar
ggradar(mtcars_radar)
mtcars
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/radar.R')
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/radar.R')
rownames(rhc77)
mtcars
rhc77
source('C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz/radar.R')
ggradar(rhc77_radar)
setwd("C:/Users/shutchins2/Desktop/GitRepo/mu-data-viz")
